name: Docker

on:
  push:
    tags: [ 'v*.*.*', '*.*.*' ] # Dispara apenas em push de tags Git (ex: v1.0.0, 1.0.0)

env:
  REGISTRY: ghcr.io
  # A IMAGE_NAME será definida pelo metadata-action
  # Mas é útil como parte do padrão para o registry
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permissão necessária para escrever no GHCR
      # id-token: write # Removido, pois não estamos usando cosign

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for Git tag
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,pattern=v(.*),group=1 # Extrai tags sem o 'v' (ex: v1.0.0 -> 1.0.0)
            type=ref,event=tag,pattern=(.*)         # Extrai tags diretamente (ex: 1.0.0 -> 1.0.0)
          # cache-from: type=gha # Removido, pois você pediu para remover o cache
          # cache-to: type=gha,mode=max # Removido

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true # Sempre faz push quando uma tag é disparada
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha # Removido
          # cache-to: type=gha,mode=max # Removido

      # Removido: A etapa de 'Sign the published Docker image' e o 'cosign-installer'
